
    <----------------  4. Median of Two Sorted Arrays -------------->
    
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example 1:
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.

Example 2:
Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len = nums1.length + nums2.length;
        int merged[] = new int[len];
        int i=0;
        int j=0;
        int k =0;
        
        while(i < nums1.length && j < nums2.length)
        {
            if(nums1[i] < nums2[j])
            {
                merged[k] = nums1[i];
                i++;
                k++;
            }
            else
            {
                merged[k] = nums2[j];
                j++;
                k++;
            }
        }
        
        while(i < nums1.length)
        {
            merged[k] = nums1[i];
            i++;
            k++;
        }
        while(j < nums2.length)
        {
            merged[k] = nums2[j];
            j++;
            k++;
        }
        
        double median = 0.0;
        int mid = merged.length/2;
        if(merged.length % 2 == 1)
        {
            median = merged[mid];
        }
        else
        {
            median = (merged[mid] + merged[mid-1]) /2.0;
        }
        return median;
    }
    
    
